#pragma checksum "C:\Users\Aayush\source\repos\MVCTraining1\MVCTraining1\Views\Patient\PatientAdmit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fa4458eb4a3801a9db36a3c5949444dac17a9eb1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Patient_PatientAdmit), @"mvc.1.0.view", @"/Views/Patient/PatientAdmit.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Aayush\source\repos\MVCTraining1\MVCTraining1\Views\_ViewImports.cshtml"
using MVCTraining1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Aayush\source\repos\MVCTraining1\MVCTraining1\Views\_ViewImports.cshtml"
using MVCTraining1.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa4458eb4a3801a9db36a3c5949444dac17a9eb1", @"/Views/Patient/PatientAdmit.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f9f971111cf0c7a9675a2c6e8c09ee1105f1ab37", @"/Views/_ViewImports.cshtml")]
    public class Views_Patient_PatientAdmit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/ClientSide/PatientModel.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Aayush\source\repos\MVCTraining1\MVCTraining1\Views\Patient\PatientAdmit.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa4458eb4a3801a9db36a3c5949444dac17a9eb14348", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa4458eb4a3801a9db36a3c5949444dac17a9eb15387", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa4458eb4a3801a9db36a3c5949444dac17a9eb16459", async() => {
                WriteLiteral(@"
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"">
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js""></script>

    <title>Patient Home Page</title>
    <style>
        th, td, p, input {
            font: 14px Verdana;
        }

        table, th, td {
            border: solid 1px #DDD;
            border-collapse: collapse;
            padding: 2px 3px;
            text-align: center;
        }

        th {
            font-weight: bold;
        }
    </style>

    <script>
        //function Pet(name, species) {
        //    this.name = name;
        //    this.species = species;
        //}
        //function view() {
        //    return this.name + "" is a "" + this.species + ""!"";
        //");
                WriteLiteral(@"}
        //Pet.prototype.view = view;
        //var pet1 = new Pet('Jerry', 'Mouse');
        //console.log(pet1.view());
        var CurrPatient = new Patient();
        var ProblemObj = new PatientProblems();
        function AddPatient() {
            CurrPatient.name = $(""#txtname"").val();
            CurrPatient.number = $(""#txtnumber"").val();
            CurrPatient.address = $(""#txtaddress"").val();
            CurrPatient.email = $(""#txtemail"").val();
        }
        function AddProblems() {
            ProblemObj.problem = $(""#txtproblem"").val();
        }
        function AddTreatment() {
            var TreatObj = new Treatment();
            TreatObj.treatmentName = $(""#txttreatmentname"").val();
            TreatObj.dose = $(""#txttreatmentdose"").val();
            ProblemObj.treatments.push(TreatObj);
            $(""#txttreatmentname"").val("""");
            $(""#txttreatmentdose"").val("""");
        }
        function PushProblems() {
            CurrPatient.problems.push(Pro");
                WriteLiteral(@"blemObj);
            ProblemObj = new PatientProblems();
            $(""#txtproblem"").val("""");
        }
        function Display() {
            list = '';
            //list += '< table class = ""table table-striped"" >';
            //$.each(CurrPatient, function (item) {
            //    list += '<tr><td>' + ""Patient Name : "" + item.name + '</td></tr>';
            //    list += '<tr><td>' + ""Patient Number : "" + item.number + '</td></tr>';
            //    list += '<tr><td>' + ""Patient Address : "" + item.address + '</td></tr>';
            //    list += '<tr><td>' + ""Patient Email : "" + item.email + '</td></tr>';
            //}); 
            //list += '</table><br/>';
            $.each(CurrPatient.problems, function (key, value) {
                list += '<table class = ""table table - striped"">';
                list += '<tr><td>' + ""Problem Description : "" + value.problem + '</td></tr>';
                list += '<table class = ""table table-striped"">'
                list += '<tr><t");
                WriteLiteral(@"h>' + ""Treatments"" + '</th></tr>';
                $.each(value.treatments, function (key1, value1) {
                    list += '<tr><td>' + ""Treatment Name : "" + value1.treatmentName + '</td></tr>';
                    list += '<tr><td>' + ""Treatment Duration : "" + value1.dose + '</td></tr>';
                });
                list += '</table>';
                list += '</table>';
            });
            $('#List').append(list);
        }
        function Submit() {
            var Check = CurrPatient;
            $.ajax({
                url: ""/Api/PatientAPI/"",
                type: ""POST"",
                data: JSON.stringify(Check),
                contentType: ""application/json ; charset=utf-8"",
                dataType: ""json"",
                success: function (data) {
                    //alert(response);
                    $('#ErrorTable').remove();
                    Display();
                    function CreateTableFromJSON(response) {
                        var");
                WriteLiteral(@" rows = '';
                        var headers = '';
                        headers += '<tr>';
                        headers += '<th>' + ""Patient Name"" + '</th>';
                        headers += '<th>' + ""Patient Number"" + '</th>';
                        headers += '<th>' + ""Patient Address"" + '</th>';
                        headers += '<th>' + ""Patient Email"" + '</th>';
                        headers += '</tr>';
                        $('#PatientTable').append(headers);
                        $.each(response, function (key, value) {
                            //Create Rows Fron Json Data
                            rows += '<tr>';
                            rows += '<td>' + value.name + '</td>';

                            rows += '<td>' + value.number + '</td>';

                            rows += '<td>' + value.address + '</td>';

                            rows += '<td>' + value.email + '</td>';

                            rows += '</tr>';
                        });");
                WriteLiteral(@"

                        //INSERTING ROWS INTO TABLE
                        $('#PatientTable').append(rows);
                    }
                    CreateTableFromJSON(data);
                    CurrPatient = new Patient();

                    $(""#txtname"").val("""");
                    $(""#txtnumber"").val("""");
                    $(""#txtaddress"").val("""");
                    $(""#txtemail"").val("""");
                },
                failure: function (response) {
                    console.log(response.responseText);
                },
                error: function (response) {
                    $('#List').remove();
                    function CreateErrorTable() {
                        var data = response.responseJSON; //Get The ErrorList
                        var rows = '';
                        var headers = '';
                        headers += '<tr>';
                        headers += '<th>' + ""Errors"" + '</th>';
                        headers += '</tr>';
    ");
                WriteLiteral(@"                    $('#ErrorTable').append(headers);
                        $.each(data, function (key, value) {
                            rows += '<tr style=""color:red"">';
                            rows += '<td>' + value.errorMessage + '</td>'; //Display The Validation Results
                            rows += '</tr>';
                        });
                        $('#ErrorTable').append(rows);
                    }
                    CreateErrorTable();
                }
            });
        }




    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa4458eb4a3801a9db36a3c5949444dac17a9eb114438", async() => {
                WriteLiteral(@"
    <div class=""text-center"">
        <h1 class=""display-4"">Welcome</h1>
        <p>Learn about <a href=""Index.cshtml"">ASP.NET Core Hospital System</a>.</p>
    </div>

    <div class=""container"">
        <p>Enter Your Details Here</p>
        <div class=""col-sm-6"">
            <label for=""name"">Name:</label>
            <input type=""text"" class=""form-control"" id=""txtname"" placeholder=""Enter Name"" onchange=""AddPatient()""");
                BeginWriteAttribute("value", " value=\"", 7317, "\"", 7325, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <label for=\"number\">Number:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"txtnumber\" placeholder=\"Enter Phone Number\" onchange=\"AddPatient()\"");
                BeginWriteAttribute("value", " value=\"", 7551, "\"", 7559, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <label for=\"address\">Address:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"txtaddress\" placeholder=\"Enter Address\" onchange=\"AddPatient()\"");
                BeginWriteAttribute("value", " value=\"", 7783, "\"", 7791, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <label for=\"address\">Email:</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"txtemail\" placeholder=\"Enter Email\" onchange=\"AddPatient()\"");
                BeginWriteAttribute("value", " value=\"", 8009, "\"", 8017, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
        </div>
    </div>
    <br />
    <div class=""container"">
        <p>Enter Your Problems Here</p>
        <div class=""col-sm-6"">
            <label for=""name"">Problems:</label>
            <input type=""text"" class=""form-control"" id=""txtproblem"" placeholder=""Enter Problem""");
                BeginWriteAttribute("value", " value=\"", 8309, "\"", 8317, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
        </div>
    </div>
    <br />
    <div class=""container"">
        <p>Enter The Treatment For Concerning Problem Here</p>
        <div class=""col-sm-6"">
            <label for=""name"">Treatment Name:</label>
            <input type=""text"" class=""form-control"" id=""txttreatmentname"" placeholder=""Enter the treatment name""");
                BeginWriteAttribute("value", " value=\"", 8655, "\"", 8663, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <label for=\"name\">Treatment Duration (Dose):</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"txttreatmentdose\" placeholder=\"Enter the treatment duration\"");
                BeginWriteAttribute("value", " value=\"", 8899, "\"", 8907, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n        </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"container\">\r\n        <div class=\"col-sm-4\">\r\n            <button type=\"button\" class=\"btn btn-default\"");
                BeginWriteAttribute("value", " value=\"", 9071, "\"", 9079, 0);
                EndWriteAttribute();
                WriteLiteral(" name=\"add\" onclick=\"AddProblems()\">Add Problem</button>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n            <button type=\"button\" class=\"btn btn-default\"");
                BeginWriteAttribute("value", " value=\"", 9243, "\"", 9251, 0);
                EndWriteAttribute();
                WriteLiteral(" name=\"submit\" onclick=\"AddTreatment()\">Add Treatments</button>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n            <button type=\"button\" class=\"btn btn-default\"");
                BeginWriteAttribute("value", " value=\"", 9422, "\"", 9430, 0);
                EndWriteAttribute();
                WriteLiteral(" name=\"submit\" onclick=\"PushProblems()\">Add Another Problem</button>\r\n        </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"container\">\r\n        <button type=\"button\" class=\"btn btn-default\"");
                BeginWriteAttribute("value", " value=\"", 9623, "\"", 9631, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""submit"" onclick=""Submit()"">Submit Details</button>
    </div>
    <br />

    <div class=""container"" id=""List"">

    </div>

    <div class=""container"">
        <table class=""table table-striped"" id=""ErrorTable"">
            <thead>

            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

    <div class=""container"">
        <table class=""table table-striped"" id=""PatientTable"">
            <thead>

            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
